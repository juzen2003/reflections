When would you want to use a remote repository rather than keeping all your work
local?

    When multiple peopel are working on the same project or when we want to work at different places with all files synced up at the same place.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because sometimes you would like to keep your local work while doing some changes that are not ready to be merged with codes on remote, if git just automatically do the pull for you, then some of your local work might get messed up.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    fork: clone from another github repository to your github repository
    clone: clone from github repository to your local repository or from local repository to another local repository
    branches: different labels of commits

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that we can use the local copy of remote branch to compared with the actual remote branch later on, and decide if the later pull should have a new merge commit or just a fast forward merge.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    We can use dropbox, or email, but the harder part is to compare the difference of each collaboration work. The easier part is less commands and functionality compared to git or github.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making changes in separate branches is better since it might related to some experiments and features that are not ready to be in the production code yet. All codes in master should be production quality code, so we don't want to mess up those codes before we are sure our changes meet the production quality. That's why we always work on another branches to test out other stuff.
